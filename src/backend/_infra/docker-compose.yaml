name: event_receiver

services:
  
  er.blockchain:
    build:
      context: ../blockchain-hardhat
    container_name: er.blockchain
    ports:
      - "8545:8545"
    volumes:
      - ../blockchain-hardhat:/app
    command: sh -c "npx hardhat node & sleep 5 && scripts/auto-deploy.sh && tail -f /dev/null"
    networks:
      - er_network
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8545" ]
      interval: 5s
      timeout: 5s
      retries: 20
      start_period: 5s
  
  er.mongo:
    image: mongo:6.0.14
    container_name: er.mongo
    restart: unless-stopped
    depends_on:
      er.blockchain:
        condition: service_healthy
    ports:
      - "27017:27017"
    networks:
      - er_network
    volumes:
      - mongoer_data:/data/db
    
  er.mysql:
    image: mysql:8.0.32
    container_name: er.mysql
    environment:
      MYSQL_ROOT_PASSWORD: "root"
    restart: always
    depends_on:
      er.blockchain:
        condition: service_healthy
    ports:
      - "3300:3306"
    volumes:
      - mysqler_data:/var/lib/mysql
    networks:
      - er_network
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost" ]
      interval: 30s
      timeout: 10s
      retries: 5
  
  er.rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: er.rabbitmq
    environment:
      - RABBITMQ_CONFIG_FILE=/etc/rabbitmq/rabbitmq
      - deprecated_features.permit.management_metrics_collection=false
    ports:
      - "5672:5672"
      - "15672:15672"
    depends_on:
      er.blockchain:
        condition: service_healthy
    volumes:
      - rabbitmqer-data:/var/lib/rabbitmq
      - ./rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf:ro
      - ./rabbitmq-def.json:/etc/rabbitmq/definitions.json:ro
    networks:
      - er_network

volumes:
  mongoer_data:
  mysqler_data:
  rabbitmqer-data:

networks:
    er_network: